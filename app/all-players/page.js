"use client";
import { useState, useEffect } from "react";
import { db } from "@/lib/firebase";
import { collection, getDocs } from "firebase/firestore";
import Link from 'next/link';
import { useRouter } from 'next/navigation';
import H2HSelectionModal from './H2HSelectionModal'; // ‚≠ê 1. Import Modal Component (‡∏ï‡πâ‡∏≠‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå‡∏ô‡∏µ‡πâ‡πÄ‡∏û‡∏¥‡πà‡∏°)

export default function AllPlayersPage() {
  const [players, setPlayers] = useState([]);
  const [filteredPlayers, setFilteredPlayers] = useState([]); // ‚≠ê State ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡∏ó‡∏µ‡πà Filter ‡πÅ‡∏•‡πâ‡∏ß
  const router = useRouter();
  const [searchTerm, setSearchTerm] = useState("");
  const [isH2HModalOpen, setIsH2HModalOpen] = useState(false); // ‚≠ê 2. State ‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏¥‡∏î/‡∏õ‡∏¥‡∏î Modal

  useEffect(() => {
    const fetchPlayers = async () => {
      const querySnapshot = await getDocs(collection(db, "players"));
      const playersData = querySnapshot.docs.map(doc => ({
        id: doc.id,
        ...doc.data(),
      }));

      // ‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏à‡∏≤‡∏Å Ranking ‡∏°‡∏≤‡∏Å ‚Üí ‡∏ô‡πâ‡∏≠‡∏¢ (Optional: ‡∏ñ‡πâ‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£)
      // playersData.sort((a, b) => (b.ranking || 0) - (a.ranking || 0));
      setPlayers(playersData);
      setFilteredPlayers(playersData); // ‚≠ê ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÉ‡∏´‡πâ‡πÅ‡∏™‡∏î‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
    };

    fetchPlayers();
  }, []);

  // Filter ‡∏ä‡∏∑‡πà‡∏≠‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö Search (‡πÅ‡∏¢‡∏Å Logic ‡∏≠‡∏≠‡∏Å‡∏°‡∏≤)
  useEffect(() => {
    const results = players.filter(player =>
      player.name.toLowerCase().includes(searchTerm.toLowerCase())
    );
    setFilteredPlayers(results);
  }, [searchTerm, players]);

  // ‚≠ê 3. Function ‡πÄ‡∏õ‡∏¥‡∏î Modal
  const handleOpenH2HModal = () => {
    setIsH2HModalOpen(true);
  };

  // ‚≠ê 4. Function ‡∏õ‡∏¥‡∏î Modal
  const handleCloseH2HModal = () => {
    setIsH2HModalOpen(false);
  };

  // ‚≠ê 5. Function ‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡πÉ‡∏ô Modal ‡∏Ñ‡∏£‡∏ö 2 ‡∏Ñ‡∏ô
  const handleH2HSelect = (player1Name, player2Name) => {
    router.push(`/h2h?p1=${encodeURIComponent(player1Name)}&p2=${encodeURIComponent(player2Name)}`);
    handleCloseH2HModal(); // ‡∏õ‡∏¥‡∏î Modal ‡∏´‡∏•‡∏±‡∏á‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
  };

  return (
    <main className="min-h-screen bg-gradient-to-b from-blue-50 to-blue-100 p-6">
        {/* --- ‡∏õ‡∏∏‡πà‡∏°‡∏ï‡πà‡∏≤‡∏á‡πÜ ‡∏î‡πâ‡∏≤‡∏ô‡∏ö‡∏ô --- */}
        <div className="flex flex-wrap justify-center gap-4 mb-4">
            {/* ‡∏õ‡∏∏‡πà‡∏°‡∏Å‡∏•‡∏±‡∏ö‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏Å */}
            <Link href="/">
              <div className="bg-green-500 hover:bg-green-600 text-white font-bold py-2 px-4 rounded-full text-sm inline-block cursor-pointer">
                üè† ‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏Å
              </div>
            </Link>

            {/* ‚≠ê 6. ‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏õ‡∏¥‡∏î Modal H2H */}
            <button
              onClick={handleOpenH2HModal}
              className="bg-purple-500 hover:bg-purple-600 text-white font-bold py-2 px-4 rounded-full text-sm inline-block"
            >
              üìä ‡πÄ‡∏õ‡∏£‡∏µ‡∏¢‡∏ö‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö Head-to-Head
            </button>
        </div>

      <h1 className="text-3xl font-bold text-center text-blue-800 mb-2">
        üè∏ ‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î ({filteredPlayers.length} ‡∏Ñ‡∏ô)
      </h1>

      {/* ‡∏ä‡πà‡∏≠‡∏á‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ */}
      <div className="flex justify-center mb-6">
        <input
          type="text"
          placeholder="üîç ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô..."
          value={searchTerm}
          onChange={(e) => setSearchTerm(e.target.value)}
          className="border rounded px-4 py-2 w-64 text-sm shadow-sm"
        />
      </div>

      {/* ‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô */}
      <div className="max-w-5xl mx-auto grid grid-cols-5 gap-x-1 gap-y-4 justify-items-center">
      {filteredPlayers.map((player, index) => (
        <div key={player.id} className="flex flex-col items-center w-16 text-center">
          {/* ‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡∏£‡∏π‡∏õ‡πÅ‡∏•‡∏∞‡∏ä‡∏∑‡πà‡∏≠‡∏Ñ‡∏•‡∏¥‡∏Å‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤ userwin ‡πÑ‡∏î‡πâ */}
          <div
            onClick={() => router.push(`/userwin/${encodeURIComponent(player.name)}`)}
            className="cursor-pointer group flex flex-col items-center"
          >
            <img
              src={player.image || '/default-avatar.png'} // ‡πÉ‡∏™‡πà‡∏£‡∏π‡∏õ default ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ
              alt={player.name}
              className="w-14 h-14 rounded-full object-cover shadow-lg group-hover:opacity-80 transition"
            />
            <p className="mt-1 font-semibold text-gray-800 text-[10px] w-full break-words line-clamp-2 h-6"> {/* ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏π‡∏á‡πÉ‡∏´‡πâ‡πÄ‡∏ó‡πà‡∏≤‡∏Å‡∏±‡∏ô */}
              {player.name}
            </p>
          </div>
        </div>
      ))}
      </div>

      {/* ‚≠ê 7. ‡πÅ‡∏™‡∏î‡∏á Modal Component */}
      <H2HSelectionModal
        isOpen={isH2HModalOpen}
        onClose={handleCloseH2HModal}
        players={players} // ‡∏™‡πà‡∏á‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÑ‡∏õ‡πÉ‡∏´‡πâ Modal
        onSelect={handleH2HSelect}
      />
    </main>
  );
}